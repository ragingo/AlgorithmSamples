---
# clang-tidy configuration for AlgorithmSamples C++ project
# Comprehensive lightweight rules - fast execution with extensive coverage (96 rules)
#
# EXCLUDED heavy-performance rules:
# - cert-* (complex security analysis)
# - clang-analyzer-* (deep static analysis)
# - include-cleaner-* (header file analysis)
# - readability-magic-numbers (scans all numeric literals)
# - modernize-avoid-c-arrays (expensive array analysis)
# - google-* (extensive style checks)
# - llvm-* (LLVM-specific checks)
# - fuchsia-* (OS-specific checks)
# - hicpp-* (high integrity C++ checks)
# - readability-function-cognitive-complexity (complex analysis)
# - misc-non-private-member-variables-in-classes (class analysis)
Checks: >
  modernize-use-auto,
  modernize-use-nullptr,
  modernize-use-override,
  modernize-use-using,
  modernize-loop-convert,
  modernize-redundant-void-arg,
  modernize-return-braced-init-list,
  modernize-shrink-to-fit,
  modernize-unary-static-assert,
  modernize-use-bool-literals,
  modernize-use-equals-default,
  modernize-use-equals-delete,
  modernize-use-noexcept,
  modernize-use-transparent-functors,
  readability-identifier-length,
  readability-const-return-type,
  readability-container-size-empty,
  readability-redundant-member-init,
  readability-simplify-boolean-expr,
  readability-braces-around-statements,
  readability-redundant-control-flow,
  readability-redundant-string-cstr,
  readability-redundant-string-init,
  readability-static-accessed-through-instance,
  readability-uppercase-literal-suffix,
  readability-use-anyofallof,
  performance-for-range-copy,
  performance-unnecessary-copy-initialization,
  performance-move-const-arg,
  performance-faster-string-find,
  performance-inefficient-algorithm,
  performance-inefficient-string-concatenation,
  performance-inefficient-vector-operation,
  performance-move-constructor-init,
  performance-noexcept-move-constructor,
  performance-trivially-destructible,
  performance-unnecessary-value-param,
  bugprone-unused-raii,
  bugprone-argument-comment,
  bugprone-bool-pointer-implicit-conversion,
  bugprone-copy-constructor-init,
  bugprone-integer-division,
  bugprone-move-forwarding-reference,
  bugprone-dangling-handle,
  bugprone-fold-init-type,
  bugprone-forward-declaration-namespace,
  bugprone-forwarding-reference-overload,
  bugprone-inaccurate-erase,
  bugprone-incorrect-roundings,
  bugprone-infinite-loop,
  bugprone-lambda-function-name,
  bugprone-misplaced-operator-in-strlen-in-alloc,
  bugprone-multiple-statement-macro,
  bugprone-no-escape,
  bugprone-not-null-terminated-result,
  bugprone-parent-virtual-call,
  bugprone-posix-return,
  bugprone-redundant-branch-condition,
  bugprone-reserved-identifier,
  bugprone-sizeof-container,
  bugprone-sizeof-expression,
  bugprone-string-constructor,
  bugprone-string-integer-assignment,
  bugprone-string-literal-with-embedded-nul,
  bugprone-suspicious-enum-usage,
  bugprone-suspicious-include,
  bugprone-suspicious-memset-usage,
  bugprone-suspicious-missing-comma,
  bugprone-suspicious-semicolon,
  bugprone-suspicious-string-compare,
  bugprone-swapped-arguments,
  bugprone-terminating-continue,
  bugprone-throw-keyword-missing,
  bugprone-too-small-loop-variable,
  bugprone-undefined-memory-manipulation,
  bugprone-undelegated-constructor,
  bugprone-unhandled-self-assignment,
  bugprone-unused-local-non-trivial-variable,
  bugprone-unused-return-value,
  bugprone-use-after-move,
  bugprone-virtual-near-miss,
  cppcoreguidelines-avoid-goto,
  cppcoreguidelines-init-variables,
  cppcoreguidelines-slicing,
  cppcoreguidelines-narrowing-conversions,
  cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  cppcoreguidelines-pro-bounds-constant-array-index,
  cppcoreguidelines-pro-bounds-pointer-arithmetic,
  cppcoreguidelines-pro-type-const-cast,
  cppcoreguidelines-pro-type-cstyle-cast,
  cppcoreguidelines-pro-type-reinterpret-cast,
  cppcoreguidelines-pro-type-static-cast-downcast,
  cppcoreguidelines-pro-type-union-access,
  cppcoreguidelines-special-member-functions,
  misc-const-correctness,
  misc-definitions-in-headers,
  misc-misleading-bidirectional,
  misc-misleading-identifier,
  misc-misplaced-const,
  misc-new-delete-overloads,
  misc-no-recursion,
  misc-non-copyable-objects,
  misc-redundant-expression,
  misc-static-assert,
  misc-throw-by-value-catch-by-reference,
  misc-unconventional-assign-operator,
  misc-uniqueptr-reset-release,
  misc-unused-alias-decls,
  misc-unused-parameters,
  misc-unused-using-decls

CheckOptions:
  - key: readability-identifier-length.MinimumVariableNameLength
    value: 1
  - key: readability-identifier-length.MinimumParameterNameLength
    value: 1
  - key: readability-identifier-length.MinimumLoopCounterNameLength
    value: 1
  - key: performance-for-range-copy.WarnOnAllAutoCopies
    value: true
  - key: performance-unnecessary-copy-initialization.AllowedTypes
    value: 'std::string;std::vector'
  - key: modernize-use-auto.MinTypeNameLength
    value: 5
  - key: misc-unused-parameters.StrictMode
    value: false

WarningsAsErrors: ''
HeaderFilterRegex: '.*'
FormatStyle: file
